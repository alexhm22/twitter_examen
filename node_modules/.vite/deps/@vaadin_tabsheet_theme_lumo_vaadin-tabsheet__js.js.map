{
  "version": 3,
  "sources": ["../../@vaadin/tabsheet/theme/lumo/vaadin-tabsheet-styles.js", "../../@vaadin/tabsheet/src/vaadin-tabsheet-scroller.js", "../../@vaadin/tabsheet/src/vaadin-tabsheet.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { loader } from '@vaadin/vaadin-lumo-styles/mixins/loader.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst tabsheet = css`\n  :host {\n    font-size: var(--lumo-font-size-m);\n    line-height: var(--lumo-line-height-m);\n    font-family: var(--lumo-font-family);\n  }\n\n  :host([theme~='bordered']) {\n    border: 1px solid var(--lumo-contrast-20pct);\n    border-radius: var(--lumo-border-radius-l);\n  }\n\n  [part='tabs-container'] {\n    box-shadow: inset 0 -1px 0 0 var(--lumo-contrast-10pct);\n    padding: var(--lumo-space-xs) var(--lumo-space-s);\n    gap: var(--lumo-space-s);\n  }\n\n  ::slotted([slot='tabs']) {\n    box-shadow: initial;\n    margin: calc(var(--lumo-space-xs) * -1) calc(var(--lumo-space-s) * -1);\n  }\n\n  [part='content'] {\n    padding: var(--lumo-space-s) var(--lumo-space-m);\n    border-bottom-left-radius: inherit;\n    border-bottom-right-radius: inherit;\n  }\n\n  :host([loading]) [part='content'] {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nregisterStyles('vaadin-tabsheet', [tabsheet, loader], { moduleId: 'lumo-tabsheet' });\n\nexport { tabsheet };\n", "/**\n * @license\n * Copyright (c) 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { Scroller } from '@vaadin/scroller/src/vaadin-scroller.js';\n\n/**\n * An element used internally by `<vaadin-tabsheet>`. Not intended to be used separately.\n *\n * @extends Scroller\n * @private\n */\nclass TabsheetScroller extends Scroller {\n  static get is() {\n    return 'vaadin-tabsheet-scroller';\n  }\n}\n\ncustomElements.define(TabsheetScroller.is, TabsheetScroller);\n", "/**\n * @license\n * Copyright (c) 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport './vaadin-tabsheet-scroller.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { OverflowController } from '@vaadin/component-base/src/overflow-controller.js';\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\nimport { generateUniqueId } from '@vaadin/component-base/src/unique-id-utils.js';\nimport { DelegateStateMixin } from '@vaadin/field-base/src/delegate-state-mixin.js';\nimport { Tabs } from '@vaadin/tabs/src/vaadin-tabs.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * @private\n * A controller which observes the <vaadin-tabs> slotted to the tabs slot.\n */\nclass TabsSlotController extends SlotController {\n  constructor(host) {\n    super(host, 'tabs');\n    this.__tabsItemsChangedListener = this.__tabsItemsChangedListener.bind(this);\n    this.__tabsSelectedChangedListener = this.__tabsSelectedChangedListener.bind(this);\n  }\n\n  /** @private */\n  __tabsItemsChangedListener() {\n    this.host._setItems(this.tabs.items);\n  }\n\n  /** @private */\n  __tabsSelectedChangedListener() {\n    this.host.selected = this.tabs.selected;\n  }\n\n  initCustomNode(tabs) {\n    if (!(tabs instanceof Tabs)) {\n      throw Error('The \"tabs\" slot of a <vaadin-tabsheet> must only contain a <vaadin-tabs> element!');\n    }\n    this.tabs = tabs;\n    tabs.addEventListener('items-changed', this.__tabsItemsChangedListener);\n    tabs.addEventListener('selected-changed', this.__tabsSelectedChangedListener);\n    this.host.__tabs = tabs;\n    this.host.stateTarget = tabs;\n    this.__tabsItemsChangedListener();\n  }\n\n  teardownNode(tabs) {\n    this.tabs = null;\n    tabs.removeEventListener('items-changed', this.__tabsItemsChangedListener);\n    tabs.removeEventListener('selected-changed', this.__tabsSelectedChangedListener);\n    this.host.__tabs = null;\n    this.host._setItems([]);\n    this.host.stateTarget = undefined;\n  }\n}\n\n/**\n * `<vaadin-tabsheet>` is a Web Component for organizing and grouping content\n * into scrollable panels. The panels can be switched between by using tabs.\n *\n * ```\n *  <vaadin-tabsheet>\n *    <div slot=\"prefix\">Prefix</div>\n *    <div slot=\"suffix\">Suffix</div>\n *\n *    <vaadin-tabs slot=\"tabs\">\n *      <vaadin-tab id=\"tab-1\">Tab 1</vaadin-tab>\n *      <vaadin-tab id=\"tab-2\">Tab 2</vaadin-tab>\n *      <vaadin-tab id=\"tab-3\">Tab 3</vaadin-tab>\n *    </vaadin-tabs>\n *\n *    <div tab=\"tab-1\">Panel 1</div>\n *    <div tab=\"tab-2\">Panel 2</div>\n *    <div tab=\"tab-3\">Panel 3</div>\n *  </vaadin-tabsheet>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are exposed for styling:\n *\n * Part name | Description\n * --------- | ---------------\n * `tabs-container`    | The container for the slotted prefix, tabs and suffix\n * `content`    | The container for the slotted panels\n *\n * The following state attributes are available for styling:\n *\n * Attribute         | Description\n * ------------------|-------------\n * `loading` | Set when a tab without associated content is selected\n * `overflow`   | Set to `top`, `bottom`, `start`, `end`, all of them, or none.\n *\n * See [Styling Components](hhttps://vaadin.com/docs/latest/components/ds-resources/customization/styling-components) documentation.\n *\n * @fires {CustomEvent} items-changed - Fired when the `items` property changes.\n * @fires {CustomEvent} selected-changed - Fired when the `selected` property changes.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes ControllerMixin\n * @mises DelegateStateMixin\n */\nclass TabSheet extends ControllerMixin(DelegateStateMixin(ElementMixin(ThemableMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style>\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        :host {\n          display: flex;\n          flex-direction: column;\n        }\n\n        [part='tabs-container'] {\n          position: relative;\n          display: flex;\n          align-items: center;\n        }\n\n        ::slotted([slot='tabs']) {\n          flex: 1;\n          align-self: stretch;\n          min-width: 8em;\n        }\n\n        [part='content'] {\n          position: relative;\n          flex: 1;\n          box-sizing: border-box;\n        }\n      </style>\n\n      <div part=\"tabs-container\">\n        <slot name=\"prefix\"></slot>\n        <slot name=\"tabs\"></slot>\n        <slot name=\"suffix\"></slot>\n      </div>\n\n      <vaadin-tabsheet-scroller part=\"content\">\n        <div part=\"loader\"></div>\n        <slot id=\"panel-slot\"></slot>\n      </vaadin-tabsheet-scroller>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-tabsheet';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The list of `<vaadin-tab>`s from which a selection can be made.\n       * It is populated from the elements passed inside the slotted\n       * `<vaadin-tabs>`, and updated dynamically when adding or removing items.\n       *\n       * Note: unlike `<vaadin-combo-box>`, this property is read-only.\n       * @type {!Array<!Tab> | undefined}\n       */\n      items: {\n        type: Array,\n        readOnly: true,\n        notify: true,\n      },\n\n      /**\n       * The index of the selected tab.\n       */\n      selected: {\n        value: 0,\n        type: Number,\n        notify: true,\n      },\n\n      /**\n       * The slotted <vaadin-tabs> element.\n       */\n      __tabs: {\n        type: Object,\n      },\n\n      /**\n       * The panel elements.\n       */\n      __panels: {\n        type: Array,\n      },\n    };\n  }\n\n  /** @override */\n  static get delegateProps() {\n    return ['selected'];\n  }\n\n  /** @override */\n  static get delegateAttrs() {\n    return ['theme'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.__overflowController = new OverflowController(this, this.shadowRoot.querySelector('[part=\"content\"]'));\n    this.addController(this.__overflowController);\n\n    this._tabsSlotController = new TabsSlotController(this);\n    this.addController(this._tabsSlotController);\n\n    // Observe the panels slot for nodes. Set the assigned element nodes as the __panels array.\n    const panelSlot = this.shadowRoot.querySelector('#panel-slot');\n    this.__panelsObserver = new FlattenedNodesObserver(panelSlot, () => {\n      this.__panels = Array.from(panelSlot.assignedNodes({ flatten: true })).filter(\n        (node) => node.nodeType === Node.ELEMENT_NODE,\n      );\n    });\n  }\n\n  static get observers() {\n    return ['__itemsOrPanelsChanged(items, __panels)', '__selectedTabItemChanged(selected, items, __panels)'];\n  }\n\n  /**\n   * An observer which applies the necessary roles and ARIA attributes\n   * to associate the tab elements with the panels.\n   * @private\n   */\n  __itemsOrPanelsChanged(items, panels) {\n    if (!items || !panels) {\n      return;\n    }\n\n    items.forEach((tabItem) => {\n      const panel = panels.find((panel) => panel.getAttribute('tab') === tabItem.id);\n      if (panel) {\n        panel.role = 'tabpanel';\n        panel.id = panel.id || `tabsheet-panel-${generateUniqueId()}`;\n        panel.setAttribute('aria-labelledby', tabItem.id);\n\n        tabItem.setAttribute('aria-controls', panel.id);\n      }\n    });\n  }\n\n  /**\n   * An observer which toggles the visibility of the panels based on the selected tab.\n   * @private\n   */\n  __selectedTabItemChanged(selected, items, panels) {\n    if (!items || !panels || selected === undefined) {\n      return;\n    }\n\n    const content = this.shadowRoot.querySelector('[part=\"content\"]');\n\n    const selectedTab = items[selected];\n    const selectedTabId = selectedTab ? selectedTab.id : '';\n    const selectedPanel = panels.find((panel) => panel.getAttribute('tab') === selectedTabId);\n\n    // Mark loading state if a selected panel is not found.\n    this.toggleAttribute('loading', !selectedPanel);\n\n    const hasOneVisiblePanel = panels.filter((panel) => !panel.hidden).length === 1;\n\n    if (selectedPanel) {\n      // A selected panel is found, remove the loading state fallback height.\n      content.style.minHeight = '';\n    } else if (hasOneVisiblePanel) {\n      // Make sure the empty content has a fallback height in loading state..\n      content.style.minHeight = `${content.offsetHeight}px`;\n    }\n\n    // Hide all panels and show only the selected panel.\n    panels.forEach((panel) => {\n      panel.hidden = panel !== selectedPanel;\n    });\n  }\n}\n\ncustomElements.define(TabSheet.is, TabSheet);\n\nexport { TabSheet };\n"],
  "mappings": "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",
  "names": ["panel"]
}
