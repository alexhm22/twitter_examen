import {
  TextArea
} from "./chunk-RUU7FYJK.js";
import "./chunk-EBYIMHHL.js";
import "./chunk-EVIJ22AM.js";
import "./chunk-SRU2LDDK.js";
import "./chunk-PGG5QZ47.js";
import "./chunk-ETJMRR4D.js";
import "./chunk-J7BODBZG.js";
import "./chunk-5AS73FDI.js";
import {
  Button
} from "./chunk-LFCGL26B.js";
import "./chunk-EZ46QOXV.js";
import "./chunk-NUPKK76C.js";
import "./chunk-HNLXNRLU.js";
import "./chunk-LU3TFTVZ.js";
import "./chunk-CSTDY47U.js";
import "./chunk-KJAG6HMH.js";
import "./chunk-IOVQFHDT.js";
import "./chunk-L55YM4J4.js";
import "./chunk-3PUWOMHD.js";
import "./chunk-IWC67P3I.js";
import "./chunk-KXXAFB6L.js";
import "./chunk-ZXFVDR5S.js";
import "./chunk-Q67J475U.js";
import "./chunk-LJ4MV4IY.js";
import "./chunk-VJGDHWCK.js";
import {
  TooltipController
} from "./chunk-L374UGML.js";
import "./chunk-F4BRGDFL.js";
import "./chunk-26L5GZ27.js";
import "./chunk-GA4D3JZK.js";
import {
  ElementMixin
} from "./chunk-35PYPRLR.js";
import "./chunk-WB77GQTL.js";
import "./chunk-LSFWBQOV.js";
import "./chunk-UMO66KPY.js";
import "./chunk-EF42WAVP.js";
import "./chunk-OFT7WUTJ.js";
import {
  ControllerMixin
} from "./chunk-YELGMEWD.js";
import {
  ThemableMixin,
  registerStyles
} from "./chunk-VCK5WHZR.js";
import "./chunk-RTIK5DCO.js";
import "./chunk-VUWTYCVF.js";
import {
  css
} from "./chunk-KW5WBOXY.js";
import "./chunk-L65BUNLZ.js";
import "./chunk-CQH3N2QY.js";
import "./chunk-LQ5QREVC.js";
import {
  PolymerElement
} from "./chunk-BK2NTPF4.js";
import "./chunk-A5QYNKPK.js";
import "./chunk-ZNZEAP57.js";
import "./chunk-54PPSA5Z.js";
import {
  html
} from "./chunk-BPZOCPE6.js";
import "./chunk-CJPRR7ZF.js";

// node_modules/@vaadin/message-input/theme/lumo/vaadin-message-input-styles.js
registerStyles(
  "vaadin-message-input",
  css`
    :host {
      padding: var(--lumo-space-s) var(--lumo-space-m);
    }
  `,
  { moduleId: "lumo-message-input" }
);

// node_modules/@vaadin/message-input/theme/lumo/vaadin-message-input-text-area-styles.js
registerStyles(
  "vaadin-message-input-text-area",
  css`
    :host {
      margin: 0 var(--lumo-space-s) 0 0;
    }

    :host([dir='rtl']) {
      margin: 0 0 0 var(--lumo-space-s);
    }
  `,
  { moduleId: "lumo-message-input-text-area" }
);

// node_modules/@vaadin/message-input/src/vaadin-message-input-text-area.js
registerStyles(
  "vaadin-message-input-text-area",
  css`
    :host {
      align-self: stretch;
      flex-grow: 1;
    }

    .textarea-wrapper {
      min-height: 0;
    }
  `,
  { moduleId: "vaadin-message-input-text-area-styles" }
);
var MessageInputTextArea = class extends TextArea {
  static get is() {
    return "vaadin-message-input-text-area";
  }
  static get properties() {
    return {
      ariaLabel: {
        type: String,
        observer: "__ariaLabelChanged"
      }
    };
  }
  _inputElementChanged(input) {
    super._inputElementChanged(input);
    if (input) {
      input.removeAttribute("aria-labelledby");
      input.setAttribute("rows", 1);
      input.style.minHeight = "0";
      this.__updateAriaLabel(this.ariaLabel);
    }
  }
  _onKeyDown(event) {
    if (event.key === "Enter" && !event.shiftKey) {
      event.preventDefault();
      event.stopPropagation();
      this.dispatchEvent(new CustomEvent("enter"));
    }
    super._onKeyDown(event);
  }
  __updateAriaLabel(ariaLabel) {
    if (ariaLabel) {
      this.inputElement.setAttribute("aria-label", ariaLabel);
    } else {
      this.inputElement.removeAttribute("aria-label");
    }
  }
  __ariaLabelChanged(ariaLabel) {
    if (!this.inputElement) {
      return;
    }
    this.__updateAriaLabel(ariaLabel);
  }
};
customElements.define(MessageInputTextArea.is, MessageInputTextArea);

// node_modules/@vaadin/message-input/src/vaadin-message-input-button.js
registerStyles(
  "vaadin-message-input-button",
  css`
    :host {
      flex-shrink: 0;
    }
  `,
  { moduleId: "vaadin-message-input-button-styles" }
);
var MessageInputButton = class extends Button {
  static get is() {
    return "vaadin-message-input-button";
  }
};
customElements.define(MessageInputButton.is, MessageInputButton);

// node_modules/@vaadin/message-input/src/vaadin-message-input.js
var MessageInput = class extends ElementMixin(ThemableMixin(ControllerMixin(PolymerElement))) {
  static get properties() {
    return {
      value: {
        type: String
      },
      i18n: {
        type: Object,
        value: () => ({
          send: "Send",
          message: "Message"
        })
      },
      disabled: {
        type: Boolean,
        value: false,
        reflectToAttribute: true
      }
    };
  }
  static get template() {
    return html`
      <style>
        :host {
          align-items: flex-start;
          box-sizing: border-box;
          display: flex;
          max-height: 50vh;
          overflow: hidden;
          flex-shrink: 0;
        }

        :host([hidden]) {
          display: none !important;
        }
      </style>
      <vaadin-message-input-text-area
        disabled="[[disabled]]"
        value="{{value}}"
        placeholder="[[i18n.message]]"
        aria-label="[[i18n.message]]"
        on-enter="__submit"
      ></vaadin-message-input-text-area>
      <vaadin-message-input-button disabled="[[disabled]]" theme="primary contained" on-click="__submit"
        >[[i18n.send]]</vaadin-message-input-button
      >

      <slot name="tooltip"></slot>
    `;
  }
  static get is() {
    return "vaadin-message-input";
  }
  ready() {
    super.ready();
    this._tooltipController = new TooltipController(this);
    this.addController(this._tooltipController);
  }
  __submit() {
    if (this.value !== "") {
      this.dispatchEvent(new CustomEvent("submit", { detail: { value: this.value } }));
      this.value = "";
    }
    this.shadowRoot.querySelector("vaadin-message-input-text-area").focus();
  }
};
customElements.define(MessageInput.is, MessageInput);
/**
 * @license
 * Copyright (c) 2021 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=@vaadin_message-input_theme_lumo_vaadin-message-input__js.js.map
