import {
  NumberField
} from "./chunk-LDYKYRTD.js";
import "./chunk-EBYIMHHL.js";
import "./chunk-SRU2LDDK.js";
import "./chunk-PGG5QZ47.js";
import "./chunk-ETJMRR4D.js";
import "./chunk-NUPKK76C.js";
import "./chunk-MMRSOPPJ.js";
import "./chunk-HNLXNRLU.js";
import "./chunk-LU3TFTVZ.js";
import "./chunk-CSTDY47U.js";
import "./chunk-KJAG6HMH.js";
import "./chunk-IOVQFHDT.js";
import "./chunk-L55YM4J4.js";
import "./chunk-3PUWOMHD.js";
import "./chunk-ZXFVDR5S.js";
import "./chunk-Q67J475U.js";
import "./chunk-LJ4MV4IY.js";
import "./chunk-VJGDHWCK.js";
import "./chunk-L374UGML.js";
import "./chunk-F4BRGDFL.js";
import "./chunk-26L5GZ27.js";
import "./chunk-GA4D3JZK.js";
import "./chunk-35PYPRLR.js";
import "./chunk-WB77GQTL.js";
import "./chunk-LSFWBQOV.js";
import "./chunk-UMO66KPY.js";
import "./chunk-EF42WAVP.js";
import "./chunk-OFT7WUTJ.js";
import "./chunk-YELGMEWD.js";
import "./chunk-VCK5WHZR.js";
import "./chunk-RTIK5DCO.js";
import "./chunk-VUWTYCVF.js";
import "./chunk-KW5WBOXY.js";
import "./chunk-L65BUNLZ.js";
import "./chunk-CQH3N2QY.js";
import "./chunk-LQ5QREVC.js";
import "./chunk-BK2NTPF4.js";
import "./chunk-A5QYNKPK.js";
import "./chunk-ZNZEAP57.js";
import "./chunk-54PPSA5Z.js";
import "./chunk-BPZOCPE6.js";
import "./chunk-CJPRR7ZF.js";

// node_modules/@vaadin/integer-field/src/vaadin-integer-field.js
var IntegerField = class extends NumberField {
  static get is() {
    return "vaadin-integer-field";
  }
  constructor() {
    super();
    this.allowedCharPattern = "[-+\\d]";
  }
  _valueChanged(newVal, oldVal) {
    if (newVal !== "" && !this.__isInteger(newVal)) {
      console.warn(`Trying to set non-integer value "${newVal}" to <vaadin-integer-field>. Clearing the value.`);
      this.value = "";
      return;
    }
    super._valueChanged(newVal, oldVal);
  }
  _stepChanged(step, inputElement) {
    if (step != null && !this.__hasOnlyDigits(step)) {
      console.warn(
        `<vaadin-integer-field> The \`step\` property must be a positive integer but \`${step}\` was provided, so the property was reset to \`null\`.`
      );
      this.step = null;
      return;
    }
    super._stepChanged(step, inputElement);
  }
  __isInteger(value) {
    return /^(-\d)?\d*$/.test(String(value));
  }
  __hasOnlyDigits(value) {
    return /^\d+$/.test(String(value));
  }
};
customElements.define(IntegerField.is, IntegerField);
/**
 * @license
 * Copyright (c) 2021 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=@vaadin_integer-field_theme_lumo_vaadin-integer-field__js.js.map
